{
  "name": "Multi-select-typeahead",
  "tagline": "A complete Angularjs directive for multiple selection with suggestion list && autocomplete.",
  "body": "\r\n# Multi-Select Typeahead\r\nA complete Angular.js directive for Multi-select autocomplete\r\n\r\n![alt text](https://github.com/CINBCUniversal/Multi-Select-Typeahead/blob/master/screen_shots/nonSelectedPlan.png)\r\n![alt text](https://github.com/CINBCUniversal/Multi-Select-Typeahead/blob/master/screen_shots/selectedPlan.png)\r\n\r\n#Getting started\r\nGrab the sources with  npm or download from Github: [https://github.com/CINBCUniversal/Multi-Select-Typeahead]:\r\n\r\n\r\nInstall \"multi-select-autocomplete\" npm and save it in your package.json or bower.json.\r\nFor Example :\r\n\r\n```sh\r\n$ npm install --save git+https://github.com/CINBCUniversal/Multi-Select-Typeahead.git\r\n```\r\n\r\nAfter installation include its \r\n```html\r\n@import node_modules/multi-select-autocomplete/dist/multiple-select.scss\r\nmultiple-select.min.css AND\r\nmultiple-select.min.js\r\n<script src=\"node_modules/multi-select-autocomplete/dist/multiple-select.min.js\"></script>\r\n<link href=\"node_modules/multi-select-autocomplete/dist/multiple-select.min.css\" rel=\"stylesheet\">\r\n```\r\nin your html. Then,\r\n\r\nInclude `multiSelectAutocomplete` module in your app:\r\nFor example :\r\n\r\n```javascript\r\nangular.module('app', [\r\n    'multiSelectAutocomplete'\r\n]);\r\n```\r\nNow angularMultipleSelect module is injected in your module. You are ready to use it.\r\n\r\nYou can use it in 2 ways in your form :\r\n1. If your options list is an array of objects, like :\r\n\r\n```javascript\r\nvm.planList = [\r\n            {id: 1, name : \"plan A\"},\r\n            {id: 2, name : \"Plan B\"},\r\n            {id: 3, name : \"Plan C\"},\r\n            {id: 4, name : \"Plan D\"},\r\n            {id: 5, name : \"My awesome Plan\"},\r\n            {id: 6, name : \"Not So Awesome Plan\"},\r\n            {id: 7, name : \"Plan it\"},\r\n            {id: 8, name : \"New Plan\"},\r\n            {id: 9, name : \"New Plan A\"},\r\n            {id: 10, name : \"Bootstrap Plan\"}\r\n        ];\r\n```\r\n```html\r\n<multi-autocomplete ng-model=\"vm.selectedList\"\r\n     object-property=\"'name'\"\r\n     suggestions-arr=\"vm.planList\">\r\n</multi-autocomplete>\r\n```\r\nHere, in \"suggestions-arr\" you have to provide the options list from which user can select multiple value.\r\nand, \"object-property\" is which you want to show to user. In above example \"name\" is the property which i want to show.\r\n\r\n\"ng-model\" will give you an array of selected things.\r\nFor Ex : If user selects plan A & plan B, then\r\n```javascript\r\nng-model will have\r\nvm.selectedList = [\r\n            {id: 1, name : \"plan A\"},\r\n            {id: 2, name : \"Plan B\"}\r\n        ];\r\n```\r\n2. If your options list is an array of strings, like :\r\n\r\n```javascript\r\nvm.planList = [\r\n            \"plan A\",\r\n            \"Plan B\",\r\n            \"Plan C\",\r\n            \"Plan D\",\r\n            \"My awesome Plan\",\r\n            \"Not So Awesome Plan\",\r\n            \"Plan it\",\r\n            \"New Plan\",\r\n            \"New Plan A\",\r\n            \"Bootstrap Plan\"\r\n        ];\r\n```\r\n```html\r\n<multi-autocomplete ng-model=\"vm.selectedList\"\r\n     suggestions-arr=\"vm.planList\">\r\n</multi-autocomplete>\r\n```\r\nHere, in \"suggestions-arr\" you have to provide the options list from which user can select multiple value.\r\n\r\n\"ng-model\" will give you an array of selected things.\r\nFor Ex : If user selects Plan A & Plan B, then\r\n```javascript\r\nng-model will have\r\nselectedList = [\r\n      \"Plan A\",\r\n      \"Plan B\"\r\n  ]\r\n```\r\n\r\n3. To make it required Field in a form for errors\r\n\r\n```html\r\n<form name=\"multipleSelectForm\" novalidate>\r\n    <div ng-class=\"{'has-error' : multipleSelectForm.multipleSelect.$invalid && multipleSelectForm.multipleSelect.$dirty, 'has-success' : !multipleSelectForm.multipleSelect.$invalid && multipleSelectForm.multipleSelect.$dirty}\">\r\n        <label>should not be able to submit if the selected is not selected</label>\r\n        <multi-autocomplete ng-model=\"vm.selected\" name=\"multipleSelect\" required=\"true\"\r\n                               suggestions-arr=\"vm.planList\">\r\n        </multi-autocomplete>\r\n        <span ng-show=\"multipleSelectForm.multipleSelect.$invalid && multipleSelectForm.multipleSelect.$dirty\" class=\"ng-hide\">\r\n            <p class=\"error-msg\" ng-show=\"multipleSelectForm.multipleSelect.$error.required\">Please select something from multiple select field</p>\r\n        </span>\r\n    </div>\r\n    <br/>\r\n    <button type=\"button\" class=\"btn btn-default\" ng-click=\"vm.onSubmit()\">Submit Form</button>\r\n</form>\r\n```\r\n\r\n4. Fetching options list from 3rd party api/url\r\n    Part 1. If your Api return an array of strings like :\r\n```javascript\r\n        [\r\n            \"plan A\",\r\n            \"Plan B\",\r\n            \"Plan C\",\r\n            \"Plan D\"\r\n        ];\r\n```\r\n    Then in html there is no need to specify property in \"object-property\" attribute in directive\r\n```html\r\n    <multi-autocomplete ng-model=\"skillsFromApi\"\r\n                           api-url=\"{{apiPath}}\">\r\n    </multi-autocomplete>\r\n```\r\n\r\n    Part 2. If your Api return an array of objects like :\r\n```javascript\r\n        [\r\n            {id: 1, name : \"plan A\"},\r\n            {id: 2, name : \"Plan B\"},\r\n            {id: 3, name : \"Plan C\"},\r\n            {id: 4, name : \"Plan D\"}\r\n        ]\r\n```\r\n    Then in html you need to specify property in \"object-property\" attribute in directive\r\n    in this case, you have to do like this :\r\n```html\r\n    <multi-autocomplete ng-model=\"skillsFromApi\"\r\n                            object-property=\"'name'\"\r\n                           api-url=\"{{apiPath}}\">\r\n    </multi-autocomplete>\r\n```\r\n\r\n\r\n## multi-autocomplete Options\r\n|Param  |Type\t|Required\t|Detail| Defaults   \t|\r\n|---\t|---\t|---\t|---\t|---\t|\r\n|model-arr|  String | required | ng-model for the input/autocomplete  |   NA|\r\n|suggestion-arr| Array |required |Array of options for multi-select | NA|\r\n|disable |Boolean | optional  \t| Boolean to programaticly enable/disable mult-select| false  \t|\r\n|placeholder |String |optional\t|placeholder for the input | NA  \t|\r\n|api-url | string | optional |url endpoint to get suggestions-arr | NA |\r\n|object-property |string |required*| property name to foucs on if suggestionArr is array of objects.  | NA |\r\n|multiple |number |optional| the number of options the user can select | suggestionArr.length |\r\n|clear-all |Boolean |optional|  clear all selected options| false |\r\n|close-on-select |Boolean |optional|  close dropdown when the user selects the options| true |\r\n|sort-by |String/Boolean |optional|property to sort by if the suggestionArr is array of objects, Boolean if the suggestionArr is array of strings| NA |\r\n\r\n## Run spec/tests\r\n    To run spec;\r\n    cd node_modules/multi-select-autocomplete\r\n    npm test\r\n\r\n## to run examples\r\n    clone this repo\r\n    npm install\r\n    gulp serve\r\n    should serve on http://localhost:5000\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}